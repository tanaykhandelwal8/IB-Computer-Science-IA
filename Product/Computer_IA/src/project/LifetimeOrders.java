/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;

import com.sun.glass.events.KeyEvent;
import java.awt.print.PrinterException;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author tanaykhandelwal
 */
public class LifetimeOrders extends javax.swing.JFrame {


    Date dateobj = new Date();
    Connection con=null;
    PreparedStatement pst=null;
    ResultSet rs=null;
    DefaultTableModel model;
    JFrame frame;
    JTextArea txt;
    public LifetimeOrders() {
        initComponents();
        showTableData();
        srno.setEditable(false);
        CustomerName.setEditable(false);
        Receipt.setEditable(false);
        Price.setEditable(false);
        OrderDate.setEnabled(false);
        fillInput();
        OrdersTable.setAutoCreateRowSorter(true);
        
    }
    
        
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        srno = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        CustomerName = new javax.swing.JTextField();
        Price = new javax.swing.JTextField();
        back = new javax.swing.JButton();
        ProductName = new javax.swing.JComboBox<>();
        OrderDate = new com.toedter.calendar.JDateChooser();
        date = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        OrdersTable = new javax.swing.JTable();
        filter = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        select = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        Receipt = new javax.swing.JTextArea();
        Print = new javax.swing.JButton();
        generatereceipt = new javax.swing.JButton();
        datechoose1 = new com.toedter.calendar.JDateChooser();
        datechoose2 = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        sortDate = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 10), "Past orders", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 36), new java.awt.Color(255, 255, 255))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 7));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        jLabel1.setText("Serial No.");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        jLabel2.setText("Customer Name");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        jLabel3.setText("Delivery Date");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        jLabel4.setText("Price");

        srno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srnoActionPerformed(evt);
            }
        });
        srno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                srnoKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        jLabel5.setText("Product Name");

        CustomerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomerNameActionPerformed(evt);
            }
        });
        CustomerName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CustomerNameKeyTyped(evt);
            }
        });

        Price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PriceActionPerformed(evt);
            }
        });
        Price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PriceKeyTyped(evt);
            }
        });

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        ProductName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ProductNameMousePressed(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProductNameMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ProductNameMouseExited(evt);
            }
        });
        ProductName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductNameActionPerformed(evt);
            }
        });
        ProductName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ProductNameKeyReleased(evt);
            }
        });

        OrderDate.setDateFormatString("yyyy-MM-dd");
        OrderDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                OrderDateKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 224, Short.MAX_VALUE)
                        .addComponent(back))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(123, 123, 123)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(srno)
                            .addComponent(CustomerName)
                            .addComponent(Price)
                            .addComponent(ProductName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(OrderDate, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(srno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(ProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OrderDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(back)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 7));

        OrdersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Reference No.", "Customer name", "Product Name", "Price", "Order Date", "Status"
            }
        ));
        OrdersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OrdersTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(OrdersTable);

        filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterActionPerformed(evt);
            }
        });
        filter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                filterKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                filterKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        jLabel7.setText("Filter by:");

        select.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Serial", "Customer_Name", "Product_Name", "Price", "Status" }));

        Receipt.setColumns(20);
        Receipt.setRows(5);
        jScrollPane3.setViewportView(Receipt);

        Print.setText("Print");
        Print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintActionPerformed(evt);
            }
        });

        generatereceipt.setText("Generate receipt");
        generatereceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generatereceiptActionPerformed(evt);
            }
        });

        datechoose2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                datechoose2MouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        jLabel8.setText("From");

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        jLabel9.setText("To");

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        jLabel10.setText("Date Range:");

        sortDate.setText("Go");
        sortDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortDateActionPerformed(evt);
            }
        });

        reset.setText("Reset Table Filters");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        jLabel11.setText("OR");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(select, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(filter, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(61, 61, 61)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(datechoose1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jLabel9)
                        .addGap(35, 35, 35)
                        .addComponent(datechoose2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(sortDate)
                        .addGap(31, 31, 31))))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(generatereceipt)
                        .addGap(18, 18, 18)
                        .addComponent(Print)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(reset)
                        .addGap(17, 17, 17))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(294, 294, 294)
                .addComponent(jLabel11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(jLabel11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sortDate, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(datechoose1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9)
                                .addComponent(datechoose2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Print)
                    .addComponent(generatereceipt)
                    .addComponent(reset))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 706, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void srnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srnoActionPerformed
        // TODO add your handling code here:
        }

        public void fillInput() {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con=DriverManager.getConnection("jdbc:mysql://localhost:8889/COMP IA","root","root");
                String sql="Select * from Menu";
                pst=con.prepareStatement(sql);
                rs =pst.executeQuery();
                while (rs.next()) {
                    String name=rs.getString("Name");
                    ProductName.addItem(name);
                }
                con.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"Failed to Connect to Database","Error Connection", JOptionPane.WARNING_MESSAGE);

            }
    }//GEN-LAST:event_srnoActionPerformed

    private void CustomerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustomerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CustomerNameActionPerformed

    private void PriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PriceActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        Admin obj1=new Admin();
        obj1.setVisible(true);

    }//GEN-LAST:event_backActionPerformed

    private void ProductNameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductNameMousePressed
        // TODO add your handling code here:
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost:8889/COMP IA","root","root");
            String sql="Select * from Menu";
            pst=con.prepareStatement(sql);
            rs =pst.executeQuery();
            while (rs.next()) {
                String name=rs.getString("Price");
                Price.setText(name);
            }
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Failed to Connect to Database","Error Connection", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_ProductNameMousePressed

    public void showTableData() {
            try {
                
                Class.forName("com.mysql.cj.jdbc.Driver");
                con=DriverManager.getConnection("jdbc:mysql://localhost:8889/COMP IA","root","root");
                String s="Delivered";
                String sql="SELECT * from Lifetime_Orders";
                pst=con.prepareStatement(sql);
                rs=pst.executeQuery();
                
                OrdersTable.setModel(DbUtils.resultSetToTableModel(rs));
                con.close();

            }
            catch(Exception obj) {
                JOptionPane.showMessageDialog(null,obj);
            }  
    }  
    
    private void ProductNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductNameMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_ProductNameMouseClicked

    private void ProductNameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductNameMouseExited
        // TODO add your handling code here:

    }//GEN-LAST:event_ProductNameMouseExited

    private void ProductNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductNameActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_ProductNameActionPerformed

    private void OrdersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrdersTableMouseClicked
        // TODO add your handling code here:
        try {
            model=(DefaultTableModel) OrdersTable.getModel();
            int row=OrdersTable.getSelectedRow();
            Class.forName("com.mysql.cj.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost:8889/COMP IA","root","root");
            String SelectedRowOption=(OrdersTable.getModel().getValueAt(row,0).toString());
            String sql="SELECT * from Lifetime_Orders where Serial="+SelectedRowOption;
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            if(rs.next()) {
                String date1=rs.getString("Delivery_Date");
                srno.setText(rs.getString("Serial"));
                CustomerName.setText(rs.getString("Customer_Name"));
                ProductName.setSelectedItem(rs.getString("Product_Name"));
                Price.setText(rs.getString("Price"));
                ((JTextField)OrderDate.getDateEditor().getUiComponent()).setText(date1);
            }
            con.close();
        }
        catch(Exception obj) {
            JOptionPane.showMessageDialog(null,obj);
        }
    }//GEN-LAST:event_OrdersTableMouseClicked

    private void filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_filterActionPerformed

    private void filterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filterKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterKeyPressed

    private void filterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filterKeyReleased
        // TODO add your handling code here:
        try {
            String selection=(String)select.getSelectedItem();
            Class.forName("com.mysql.cj.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost:8889/COMP IA","root","root");
            String sql="SELECT * from Lifetime_orders where "+selection+"=?";
            pst=con.prepareStatement(sql);
            pst.setString(1, filter.getText());
            rs=pst.executeQuery();
            OrdersTable.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception obj) {
            JOptionPane.showMessageDialog(null, obj);
        }
    }//GEN-LAST:event_filterKeyReleased

    private void PrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintActionPerformed
        // TODO add your handling code here:
        try {
            boolean complete=Receipt.print();
            if(complete) {
                JOptionPane.showMessageDialog(null,"Done printing","Information",JOptionPane.INFORMATION_MESSAGE);
            }
            else {
                JOptionPane.showMessageDialog(null,"Printing","Printer",JOptionPane.ERROR_MESSAGE);
            }
        }
        catch(Exception obj) {
            JOptionPane.showMessageDialog(null, obj);

            Receipt.setText("");
        }
    }//GEN-LAST:event_PrintActionPerformed

    private void generatereceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generatereceiptActionPerformed
        // TODO add your handling code here:
        Receipt.setText("");        
        Receipt.append("---------------------------------------------------------------------------------------------------\n\n"
            +"--------------------------------------------Dulcedines----------------------------------------------\n\n"
            +"Date: "+dateobj+"\n\n"
            +"Name of the customer: "+CustomerName.getText()+"\n\n"
            +"Name of the product: "+ProductName.getSelectedItem()+"\n\n"
            +"Price: "+Price.getText()+"\n\n"
            +"Thank you for ordering from our bakery, hope you visit again "
        );

        }

        private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
            try {
                // TODO add your handling code here:
                boolean print=Receipt.print();
                if(print) {
                    JOptionPane.showMessageDialog(null, "Done");
                }
                else {
                    JOptionPane.showMessageDialog(null, "Printing");
                }
            } catch (PrinterException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        }

        private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
            // TODO add your handling code here:
            try {
                FileWriter writer=new FileWriter("‎/Users/tanaykhandelwal/Desktop/");
                BufferedWriter bw=new BufferedWriter(writer);
                Receipt.write(bw);
                Receipt.setText("");
                Receipt.requestFocus();

            }
            catch(IOException obj) {
                JOptionPane.showMessageDialog(null, obj);
            }
        }

        private void jButtonActionPerformed(java.awt.event.ActionEvent evt) {
            // TODO add your handling code here:
            EditingForm obj=new EditingForm();
            setVisible(false);
            obj.setVisible(true);

    }//GEN-LAST:event_generatereceiptActionPerformed

    private void srnoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_srnoKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if((Character.isDigit(c) || Character.isLetterOrDigit(c) || c==KeyEvent.VK_BACKSPACE || c==KeyEvent.VK_DELETE))
        {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_srnoKeyTyped

    private void CustomerNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CustomerNameKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if((Character.isDigit(c) || Character.isLetterOrDigit(c) || c==KeyEvent.VK_BACKSPACE || c==KeyEvent.VK_DELETE))
        {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_CustomerNameKeyTyped

    private void ProductNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ProductNameKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_ProductNameKeyReleased

    private void PriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PriceKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if((Character.isDigit(c) || Character.isLetterOrDigit(c) || c==KeyEvent.VK_BACKSPACE || c==KeyEvent.VK_DELETE))
        {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_PriceKeyTyped

    private void OrderDateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_OrderDateKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if((Character.isDigit(c) || Character.isLetterOrDigit(c) || c==KeyEvent.VK_BACKSPACE || c==KeyEvent.VK_DELETE))
        {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_OrderDateKeyTyped

    private void datechoose2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_datechoose2MouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_datechoose2MouseClicked

    private void sortDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortDateActionPerformed
        // TODO add your handling code here:

            DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            String val1=df.format(datechoose1.getDate());
            String val2=df.format(datechoose2.getDate());
            try{
                Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:8889/COMP IA","root","root");
            String sql="SELECT * from Lifetime_orders WHERE Delivery_Date BETWEEN '"+val1+"' and '"+val2+"'";    
            PreparedStatement pst=con.prepareStatement(sql);
             ResultSet rs=pst.executeQuery();
             OrdersTable.setModel(DbUtils.resultSetToTableModel(rs));
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
    }//GEN-LAST:event_sortDateActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        showTableData();
    }//GEN-LAST:event_resetActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LifetimeOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LifetimeOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LifetimeOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LifetimeOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LifetimeOrders().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField CustomerName;
    public com.toedter.calendar.JDateChooser OrderDate;
    javax.swing.JTable OrdersTable;
    public javax.swing.JTextField Price;
    private javax.swing.JButton Print;
    public javax.swing.JComboBox<String> ProductName;
    private javax.swing.JTextArea Receipt;
    private javax.swing.JButton back;
    private javax.swing.JLabel date;
    private com.toedter.calendar.JDateChooser datechoose1;
    private com.toedter.calendar.JDateChooser datechoose2;
    private javax.swing.JTextField filter;
    private javax.swing.JButton generatereceipt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton reset;
    private javax.swing.JComboBox<String> select;
    private javax.swing.JButton sortDate;
    public javax.swing.JTextField srno;
    // End of variables declaration//GEN-END:variables
}
