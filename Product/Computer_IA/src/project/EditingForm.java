/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package project;

import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.awt.print.PrinterException;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author tanaykhandelwal
 */
public class EditingForm extends javax.swing.JFrame {
    
    
    
    /**
     * Creates new form EditingForm
     */
    private String nameOfProduct;
    private String rprice;
    private String rcustomername;
    private String rproductname;
    private String rdate;
    private JPanel jPanel = new javax.swing.JPanel();
    private JScrollPane jScrollPane2 = new javax.swing.JScrollPane();
    private JTextArea receipt = new javax.swing.JTextArea();
    private JButton back1 = new javax.swing.JButton();
    private JButton generatereceipt1 = new javax.swing.JButton();
    private JButton jButton3 = new javax.swing.JButton();
    private int quantity124;
    
    public EditingForm() {
        initComponents();
        fillInput();
        showTableData();
        DateFormat df = new SimpleDateFormat("EEEE, d MMMM, yyyy");
        date.setText(df.format(dateobj));
        rprice=Price.getText();
        rcustomername=CustomerName.getText();
        rproductname=ProductName.getSelectedItem().toString();
        Receipt.setEditable(false);
        srno.setEditable(false);
        OrdersTable.setAutoCreateRowSorter(true);
        
    }
    
    
    
    Date dateobj = new Date();
    Connection con=null;
    PreparedStatement pst=null;
    ResultSet rs=null;
    DefaultTableModel model;
    JFrame frame;
    JTextArea txt;
    
    
    public String getRPrice() {
        return rprice;
    }
    
    public void setRPrice(String rprice) {
        this.rprice=rprice;
    }
    
    
    public String getRCustomerName() {
        return rcustomername;
    }
    
    public void setRCustomerName(String rcustomername) {
        this.rcustomername=rcustomername;
    }
    
    
    public String getRProductName() {
        return rproductname;
    }
    
    public void setRProductName(String rproductname) {
        this.rproductname=rproductname;
    }
    
    public void setNameOfProduct(String nameOfProduct) {
        this.nameOfProduct=nameOfProduct;
    }
    
    public String getNameOfProduct() {
        return nameOfProduct;
    }
    
    public String getRDate() {
        return rdate;
    }
    
    public void setRDate(String rdate) {
        this.rdate=rdate;
    }
    
    public boolean checkInputs() {
        if(ProductName.getSelectedItem()==null || CustomerName.getText()==null || Price.getText()==null || DeliveryDate.getDate().toString()==null ) {
            return false;
        }
        else {
            Float.parseFloat(Price.getText());
            return true;
        }
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        srno = new javax.swing.JTextField();
        insert = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        CustomerName = new javax.swing.JTextField();
        Price = new javax.swing.JTextField();
        back = new javax.swing.JButton();
        ProductName = new javax.swing.JComboBox<>();
        DeliveryDate = new com.toedter.calendar.JDateChooser();
        date = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        getprice = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        OrdersTable = new javax.swing.JTable();
        filter = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        select = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        Receipt = new javax.swing.JTextArea();
        Print = new javax.swing.JButton();
        generatereceipt = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();

        jMenuItem1.setText("jMenuItem1");

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 10), "Ongoing orders", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 36), new java.awt.Color(255, 255, 255))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 7));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        jLabel1.setText("Serial No.");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        jLabel2.setText("Customer Name");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        jLabel3.setText("Delivery Date");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        jLabel4.setText("Price");

        srno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srnoActionPerformed(evt);
            }
        });

        insert.setText("Add order");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        Update.setText("Change details for the order ");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        Delete.setText("Order has been delivered");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        jLabel5.setText("Product Name");

        CustomerName.setText("Enter Customer Name");
        CustomerName.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        CustomerName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CustomerNameMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CustomerNameMouseEntered(evt);
            }
        });
        CustomerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomerNameActionPerformed(evt);
            }
        });

        Price.setText("0");
        Price.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PriceMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PriceMouseEntered(evt);
            }
        });
        Price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PriceActionPerformed(evt);
            }
        });

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        ProductName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ProductNameMousePressed(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProductNameMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ProductNameMouseExited(evt);
            }
        });
        ProductName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductNameActionPerformed(evt);
            }
        });

        DeliveryDate.setDateFormatString("yyyy-MM-dd");

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        jLabel8.setText("Quantity(in kg)");

        quantity.setText("0");
        quantity.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                quantityMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                quantityMouseEntered(evt);
            }
        });
        quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityActionPerformed(evt);
            }
        });
        quantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                quantityKeyTyped(evt);
            }
        });

        getprice.setText("Fetch price");
        getprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getpriceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(back)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(insert)
                        .addGap(64, 64, 64)
                        .addComponent(Update)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addComponent(Delete)
                        .addGap(33, 33, 33))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(srno)
                            .addComponent(CustomerName)
                            .addComponent(Price)
                            .addComponent(ProductName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DeliveryDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getprice, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(srno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(ProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getprice)))
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DeliveryDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(101, 101, 101)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insert)
                    .addComponent(Update)
                    .addComponent(Delete))
                .addGap(72, 72, 72)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(back)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 7));

        OrdersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Reference No.", "Customer name", "Product Name", "Price", "Delivery_Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        OrdersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OrdersTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(OrdersTable);
        if (OrdersTable.getColumnModel().getColumnCount() > 0) {
            OrdersTable.getColumnModel().getColumn(0).setResizable(false);
            OrdersTable.getColumnModel().getColumn(0).setPreferredWidth(1);
            OrdersTable.getColumnModel().getColumn(1).setPreferredWidth(8);
            OrdersTable.getColumnModel().getColumn(2).setPreferredWidth(8);
            OrdersTable.getColumnModel().getColumn(3).setPreferredWidth(1);
        }

        filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterActionPerformed(evt);
            }
        });
        filter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                filterKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                filterKeyReleased(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 15)); // NOI18N
        jLabel7.setText("Sort by:");

        select.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Serial", "Customer_Name", "Product_Name", "Delivery_Date", "Price", "Status" }));

        Receipt.setColumns(20);
        Receipt.setRows(5);
        jScrollPane3.setViewportView(Receipt);

        Print.setText("Print");
        Print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintActionPerformed(evt);
            }
        });

        generatereceipt.setText("Generate receipt");
        generatereceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generatereceiptActionPerformed(evt);
            }
        });

        jButton2.setText("Reset Table Filters");

        jButton4.setText("Reset Table Filters");

        jButton5.setText("Reset Table Filters");

        jButton6.setText("Reset Table Filters");

        jButton7.setText("Reset Table Filters");

        jButton8.setText("Reset Table Filters");

        jButton9.setText("Reset Table Filters");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(select, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(filter, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(134, 134, 134))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(generatereceipt)
                        .addGap(18, 18, 18)
                        .addComponent(Print)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton9))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton2)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton4)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton5)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton6)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton7)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton8)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Print)
                    .addComponent(generatereceipt)
                    .addComponent(jButton9))
                .addContainerGap())
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton2)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton4)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton5)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton6)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton7)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton8)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void srnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srnoActionPerformed
        // TODO add your handling code here:
    }
    public void checkUser() {
        Login obj=new Login();
        
        JOptionPane.showMessageDialog(null, obj.getIsAdmin());
        
        
    }
    
    
    public void fillInput() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost:8889/COMP IA","root","root");
            String sql="Select * from Menu";
            pst=con.prepareStatement(sql);
            rs =pst.executeQuery();
            while (rs.next()) {
                String name=rs.getString("Name");
                ProductName.addItem(name);
            }
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Failed to Connect to Database","Error Connection", JOptionPane.WARNING_MESSAGE);
            
            
        }
    }//GEN-LAST:event_srnoActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String sql="UPDATE Orders SET Customer_Name=?,Product_Name=?,Quantity=?, Price=?,Delivery_Date=? WHERE Serial=?";
            con=DriverManager.getConnection("jdbc:mysql://localhost:8889/COMP IA","root","root");
            pst=con.prepareStatement(sql);
            pst.setString(1, CustomerName.getText());
            pst.setString(2, (String) ProductName.getSelectedItem());
            pst.setString(3, quantity.getText());
            pst.setString(4, Price.getText());
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            pst.setString(5, df.format(DeliveryDate.getDate()));
            pst.setString(6, srno.getText());
            
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null,"Updated successfully");
            con.close();
            
        }
        catch (SQLException obj) {
            JOptionPane.showMessageDialog(null,obj);
        }
        catch (ClassNotFoundException ex) {
            Logger.getLogger(EditingForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        showTableData();
        srno.setText("");
        CustomerName.setText("");
        ProductName.setSelectedItem("-");
        Price.setText("");
        quantity.setText("");
    }//GEN-LAST:event_UpdateActionPerformed

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String sql="INSERT INTO Orders(Customer_Name, Product_Name, Quantity, Price, Delivery_Date)" + " VALUES (?,?,?,?,?)";
            con=DriverManager.getConnection("jdbc:mysql://localhost:8889/COMP IA","root","root");
            pst=con.prepareStatement(sql);
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            pst.setString(1, CustomerName.getText());
            pst.setString(2, (String) ProductName.getSelectedItem());
            pst.setString(3, quantity.getText());
            quantity124=Integer.parseInt(quantity.getText());
            pst.setString(4, Price.getText());
            pst.setString(5, df.format(DeliveryDate.getDate()));
            pst.executeUpdate();
            
            JOptionPane.showMessageDialog(null,"Inserted successfully");
            con.close();
            
        }
        
        catch (SQLException obj) {
            JOptionPane.showMessageDialog(null,obj);
        }
        catch (ClassNotFoundException ex) {
            Logger.getLogger(EditingForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        showTableData();
        
        srno.setText("");
        CustomerName.setText("");
        ProductName.setSelectedItem("-");
        Price.setText("");
        quantity.setText("");
        ((JTextField)DeliveryDate.getDateEditor().getUiComponent()).setText("");
        
    }//GEN-LAST:event_insertActionPerformed

    private void CustomerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustomerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CustomerNameActionPerformed

    private void PriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PriceActionPerformed
    
    @SuppressWarnings("empty-statement")
    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        Date date1=new Date();
        String date2=df.format(date1);
        boolean flag=false;
        
        
        if(date2.equalsIgnoreCase(df.format(DeliveryDate.getDate()))) {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                String sql="INSERT INTO Lifetime_Orders(Customer_Name, Product_Name, Quantity, Price, Delivery_Date)" + " VALUES (?,?,?,?,?)";
                con=DriverManager.getConnection("jdbc:mysql://localhost:8889/COMP IA","root","root");
                pst=con.prepareStatement(sql);
                pst.setString(1, CustomerName.getText());
                nameOfProduct=(String)ProductName.getSelectedItem();
                pst.setString(2, (String) ProductName.getSelectedItem());
                pst.setString(3, quantity.getText());
                quantity124=Integer.parseInt(quantity.getText());
                pst.setString(4, Price.getText());
                pst.setString(5, df.format(DeliveryDate.getDate()));
                pst.executeUpdate();
                con.close();
                flag=true;
            }
            catch (SQLException obj) {
                JOptionPane.showMessageDialog(null,obj);
            }
            catch (ClassNotFoundException ex) {
                Logger.getLogger(EditingForm.class.getName()).log(Level.SEVERE, null, ex);        }
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                String sql="DELETE FROM Orders WHERE Serial=?";
                con=DriverManager.getConnection("jdbc:mysql://localhost:8889/COMP IA","root","root");
                pst=con.prepareStatement(sql);
                pst.setString(1, srno.getText());
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null,"Great job!");
                con.close();
                showTableData();
            } catch (SQLException obj) {
                JOptionPane.showMessageDialog(null,obj);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(EditingForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            srno.setText("");
            CustomerName.setText("");
            ProductName.setSelectedItem("-");
            Price.setText("");
            quantity.setText("");
        }
        else {
            JOptionPane.showMessageDialog(null, "Today's not the delivery date!");
        }
        ResultSet rs1=null;
        int arr[]=new int[9];
        ArrayList<String> brr=new ArrayList();
       brr.add("Baking_Soda");
       brr.add("Flour");
       brr.add("Condensed_MIlk");
       brr.add("Oil");
       brr.add("Essence");
       brr.add("Whipped_Cream");
       brr.add("Cocoa_Powder");
       brr.add("Sugar");
       brr.add("Butter");
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            String sql="SELECT Baking_Soda, Flour, Condensed_Milk, Oil, Essence, Whipped_Cream, Cocoa_Powder, Sugar, Butter FROM IngredientsPerCake WHERE Name = '"+ProductName.getSelectedItem().toString()+"'";
            con=DriverManager.getConnection("jdbc:mysql://localhost:8889/COMP IA","root","root");
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            int counter=0;
            
            String sql1="SELECT Quantity, Price FROM Stock";
            con=DriverManager.getConnection("jdbc:mysql://localhost:8889/COMP IA","root","root");
            PreparedStatement pst1=con.prepareStatement(sql1);
            rs1=pst1.executeQuery();
            
            for(int i=0;i<arr.length && rs1.next();i++) {
                int k = 0;
                rs.first();
                
                rs1.beforeFirst();
                while(rs1.next()){
                    
                    arr[i]=Integer.parseInt(rs1.getString("Quantity"))-Integer.parseInt(rs.getString(brr.get(k)));
                    sql="update Stock set Quantity = (?) where Name = (?)";
                    PreparedStatement ps=con.prepareStatement(sql);
                    ps.setInt(1,(Integer.parseInt(rs1.getString("Quantity")))-(quantity124*Integer.parseInt(rs.getString(brr.get(k)))));
                    ps.setString(2, brr.get(k++));
                    ps.executeUpdate();
                }
            }
            
            
        }
        catch(Exception obj) {
            System.out.println(obj.getMessage());
        }/*
        try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        String sql="UPDATE Stock SET Name=?, Quantity=? WHERE Serial=?";
        con=DriverManager.getConnection("jdbc:mysql://localhost:8889/COMP IA","root","root");
        pst=con.prepareStatement(sql);
        pst.setString(1, name.getText());
        pst.setString(2, (String) ProductName.getSelectedItem());
        pst.setString(3, Price.getText());
        pst.setString(4, df.format(DeliveryDate.getDate()));
        pst.setString(5, srno.getText());
        
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null,"Updated successfully");
        con.close();
        
        }
        catch (Exception obj) {
        JOptionPane.showMessageDialog(null,obj);
        }
        
        */
        
    }
    public void showTableData() {
        try {
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost:8889/COMP IA","root","root");
            String s="Delivered";
            String sql="SELECT * from Orders";
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            
            OrdersTable.setModel(DbUtils.resultSetToTableModel(rs));
            con.close();
            
        }
        catch(Exception obj) {
            JOptionPane.showMessageDialog(null,obj);
        }  
    }//GEN-LAST:event_DeleteActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
// TODO add your handling code here:
setVisible(false);
Admin obj1=new Admin();
obj1.setVisible(true);

    }//GEN-LAST:event_backActionPerformed

    private void ProductNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductNameActionPerformed
// TODO add your handling code here:

    }//GEN-LAST:event_ProductNameActionPerformed
    

    private void OrdersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrdersTableMouseClicked
// TODO add your handling code here:
try {
    model=(DefaultTableModel) OrdersTable.getModel();
    int row=OrdersTable.getSelectedRow();
    Class.forName("com.mysql.cj.jdbc.Driver");
    con=DriverManager.getConnection("jdbc:mysql://localhost:8889/COMP IA","root","root");
    String SelectedRowOption=(OrdersTable.getModel().getValueAt(row,0).toString());
    String sql="SELECT * from Orders where Serial="+SelectedRowOption;
    pst=con.prepareStatement(sql);
    rs=pst.executeQuery();
    if(rs.next()) {
        String date1=rs.getString("Delivery_Date");
        srno.setText(rs.getString("Serial"));
        CustomerName.setText(rs.getString("Customer_Name"));
        ProductName.setSelectedItem(rs.getString("Product_Name"));
        quantity.setText(rs.getString("Quantity"));
        Price.setText(rs.getString("Price"));
        ((JTextField)DeliveryDate.getDateEditor().getUiComponent()).setText(date1);
    }
    con.close();
}
catch(Exception obj) {
    JOptionPane.showMessageDialog(null,obj);
}
    }//GEN-LAST:event_OrdersTableMouseClicked

    private void ProductNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductNameMouseClicked
// TODO add your handling code here:

    }//GEN-LAST:event_ProductNameMouseClicked
    
    

    private void filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterActionPerformed
// TODO add your handling code here:

    }//GEN-LAST:event_filterActionPerformed

    private void filterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filterKeyReleased
// TODO add your handling code here:
try {
    String selection=(String)select.getSelectedItem();
    Class.forName("com.mysql.cj.jdbc.Driver");
    con=DriverManager.getConnection("jdbc:mysql://localhost:8889/COMP IA","root","root");
    String sql="SELECT * from Orders where "+selection+"=?";
    pst=con.prepareStatement(sql);
    pst.setString(1, filter.getText());
    rs=pst.executeQuery();
    OrdersTable.setModel(DbUtils.resultSetToTableModel(rs));
}
catch(Exception obj) {
    JOptionPane.showMessageDialog(null, obj);
}
    }//GEN-LAST:event_filterKeyReleased

    private void filterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filterKeyPressed
// TODO add your handling code here:
    }//GEN-LAST:event_filterKeyPressed

    private void generatereceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generatereceiptActionPerformed
// TODO add your handling code here:
Receipt.setText("");
Receipt.append("---------------------------------------------------------------------------------------------------\n\n"
        +"--------------------------------------------Dulcedines----------------------------------------------\n\n"
        +"Date: "+dateobj+"\n\n"
                +"Name of the customer: "+CustomerName.getText()+"\n\n"
                        +"Name of the product: "+ProductName.getSelectedItem()+"\n\n"
                                +"Price: "+Price.getText()+"\n\n"
                                        +"Thank you for ordering from our bakery, hope you visit again "
);

Receipt.setEditable(false);



    }
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        try {
// TODO add your handling code here:
boolean print=receipt.print();
if(print) {
    JOptionPane.showMessageDialog(null, "Done");
}
else {
    JOptionPane.showMessageDialog(null, "Printing");
}
        } catch (PrinterException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
// TODO add your handling code here:
try {
    FileWriter writer=new FileWriter("‎/Users/tanaykhandelwal/Desktop/");
    BufferedWriter bw=new BufferedWriter(writer);
    receipt.write(bw);
    receipt.setText("");
    receipt.requestFocus();
    
}
catch(Exception obj) {
    JOptionPane.showMessageDialog(null, obj);
}
    }
    
    private void jButtonActionPerformed(java.awt.event.ActionEvent evt) {
// TODO add your handling code here:
EditingForm obj=new EditingForm();
setVisible(false);
obj.setVisible(true);

    }//GEN-LAST:event_generatereceiptActionPerformed

    private void PrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintActionPerformed
// TODO add your handling code here:
try {
    boolean complete=receipt.print();
    if(complete) {
        JOptionPane.showMessageDialog(null,"Done printing","Information",JOptionPane.INFORMATION_MESSAGE);
    }
    else {
        JOptionPane.showMessageDialog(null,"Printing","Printer",JOptionPane.ERROR_MESSAGE);
    }
}
catch(HeadlessException | PrinterException obj) {
    JOptionPane.showMessageDialog(null, obj);
    
    receipt.setText("");
}
    }//GEN-LAST:event_PrintActionPerformed

    private void ProductNameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductNameMouseExited
// TODO add your handling code here:

    }//GEN-LAST:event_ProductNameMouseExited

    private void ProductNameMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductNameMousePressed
// TODO add your handling code here:

    }//GEN-LAST:event_ProductNameMousePressed

    private void PriceMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PriceMouseEntered
// TODO add your handling code here:
if(Price.getText().equals("0"))
    Price.setText("");
    }//GEN-LAST:event_PriceMouseEntered

    private void CustomerNameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustomerNameMouseEntered
// TODO add your handling code here:
if(CustomerName.getText().equalsIgnoreCase("Enter Customer Name"))
    CustomerName.setText("");
    }//GEN-LAST:event_CustomerNameMouseEntered

    private void CustomerNameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustomerNameMouseExited
// TODO add your handling code here:
if(CustomerName.getText().equals(""))
    CustomerName.setText("Enter Customer Name");
    }//GEN-LAST:event_CustomerNameMouseExited

    private void PriceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PriceMouseExited
// TODO add your handling code here:
if(Price.getText().equals(""))
    Price.setText("0");
    }//GEN-LAST:event_PriceMouseExited

    private void quantityMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quantityMouseExited
// TODO add your handling code here:
if(quantity.getText().equals(""))
    quantity.setText("0");;
    }//GEN-LAST:event_quantityMouseExited

    private void quantityMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quantityMouseEntered
// TODO add your handling code here:
if(quantity.getText().equals("0"))
    quantity.setText("");
    }//GEN-LAST:event_quantityMouseEntered

    private void quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_quantityActionPerformed

    private void getpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getpriceActionPerformed
// TODO add your handling code here:
try {
    Class.forName("com.mysql.cj.jdbc.Driver");
    int index=ProductName.getSelectedItem().toString().indexOf(' ');
    String firstPart=ProductName.getSelectedItem().toString().substring(0, index);
    String lastPart=ProductName.getSelectedItem().toString().substring(index);
    String sql="SELECT * FROM Menu WHERE Name = '"+firstPart+""+lastPart+"'";
    con=DriverManager.getConnection("jdbc:mysql://localhost:8889/COMP IA","root","root");
    pst=con.prepareStatement(sql);
    rs=pst.executeQuery();
    rs.first();
    String s="";
    int q=0;
    s=quantity.getText().toString();
    q=(Integer.parseInt(rs.getString("Price")))*Integer.parseInt(s);
    Price.setText(Integer.toString(q));
    
}
catch(Exception obj) {
    JOptionPane.showMessageDialog(null, obj);
}
    }//GEN-LAST:event_getpriceActionPerformed

    private void quantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantityKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c)||c== KeyEvent.VK_BACK_SPACE||c== KeyEvent.VK_DELETE))
        {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_quantityKeyTyped
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
* For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
*/
try {
    for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
            javax.swing.UIManager.setLookAndFeel(info.getClassName());
            break;
        }
    }
} catch (ClassNotFoundException ex) {
    java.util.logging.Logger.getLogger(EditingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
} catch (InstantiationException ex) {
    java.util.logging.Logger.getLogger(EditingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
} catch (IllegalAccessException ex) {
    java.util.logging.Logger.getLogger(EditingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
} catch (javax.swing.UnsupportedLookAndFeelException ex) {
    java.util.logging.Logger.getLogger(EditingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
}
//</editor-fold>

/* Create and display the form */
java.awt.EventQueue.invokeLater(new Runnable() {
    public void run() {
        new EditingForm().setVisible(true);
    }
});
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField CustomerName;
    private javax.swing.JButton Delete;
    public com.toedter.calendar.JDateChooser DeliveryDate;
    javax.swing.JTable OrdersTable;
    public javax.swing.JTextField Price;
    private javax.swing.JButton Print;
    public javax.swing.JComboBox<String> ProductName;
    private javax.swing.JTextArea Receipt;
    private javax.swing.JButton Update;
    private javax.swing.JButton back;
    private javax.swing.JLabel date;
    private javax.swing.JTextField filter;
    private javax.swing.JButton generatereceipt;
    private javax.swing.JButton getprice;
    private javax.swing.JButton insert;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JTextField quantity;
    private javax.swing.JComboBox<String> select;
    public javax.swing.JTextField srno;
    // End of variables declaration//GEN-END:variables
    
    private void populate(String text, String text0, String string, String text1, String text2, String string0) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
